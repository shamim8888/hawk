<?xml version="1.0"?>
<workflow name="21-ocfs2-single">

<shortdesc lang="en">OCFS2 (Additional)</shortdesc>
<longdesc lang="en">
Configure an additional OCFS2 filesystem.  If you have already
created one OCFS2 filesystem, this will add a second one, dependant
on the base O2CB and DLM clone which already exists.  Note that the
OCFS2 filesystem will be stopped initially, in case you need to run
mkfs to create the filesystem.
</longdesc>

<parameters>
<stepdesc lang="en">
Specify the ID of an exising clone resource which contains DLM and
OC2B.  This is necessary to ensure that DLM and O2CB are running
prior to starting the OCFS2 filesystem.
</stepdesc>
<parameter name="base-clone" required="1">
<shortdesc lang="en">Base Clone</shortdesc>
<longdesc lang="en">
ID of an existing clone DLM and O2CB resource.
</longdesc>
<content type="string" default="base-clone"/>
</parameter>
</parameters>

<templates>
<template name="filesystem" required="1">
<stepdesc lang="en">
If an OCFS2 filesystem does not already exist on the
block device specified here, you will need to run mkfs to create
it, prior to starting the filesystem resource.  You will also need
to create the mountpoint directory on all cluster nodes.
</stepdesc>
<override name="id" value="clusterfs-2"/>
<override name="fstype" value="ocfs2"/>
<override name="directory" value="/srv/clusterfs-2"/>
</template>
</templates>

<crm_script>
clone c-<insert param="id" from_template="filesystem"/> <insert param="id" from_template="filesystem"/>
  meta interleave="true" target-role="Stopped"
order base-then-<insert param="id" from_template="filesystem"/>
  inf: <insert param="base-clone"/> c-<insert param="id" from_template="filesystem"/>
colocation <insert param="id" from_template="filesystem"/>-with-base
  inf: c-<insert param="id" from_template="filesystem"/> <insert param="base-clone"/>
</crm_script>

</workflow>
